// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CartsColumns holds the columns for the "carts" table.
	CartsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt},
	}
	// CartsTable holds the schema information for the "carts" table.
	CartsTable = &schema.Table{
		Name:       "carts",
		Columns:    CartsColumns,
		PrimaryKey: []*schema.Column{CartsColumns[0]},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "order_count", Type: field.TypeInt, Default: 0},
		{Name: "user_customer", Type: field.TypeInt, Unique: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "customers_users_customer",
				Columns:    []*schema.Column{CustomersColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "order_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "shipping_address", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "payment_method", Type: field.TypeEnum, Enums: []string{"Cash", "Banking"}},
		{Name: "total_price", Type: field.TypeInt32},
		{Name: "tracking_number", Type: field.TypeString},
		{Name: "order_status", Type: field.TypeEnum, Enums: []string{"Pending", "Processed", "Shipped", "Cancelled", "PickedUp"}},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "image_url", Type: field.TypeString},
		{Name: "summary", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "quantity", Type: field.TypeInt},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// SubCategoriesColumns holds the columns for the "sub_categories" table.
	SubCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "category_subs", Type: field.TypeInt, Nullable: true},
	}
	// SubCategoriesTable holds the schema information for the "sub_categories" table.
	SubCategoriesTable = &schema.Table{
		Name:       "sub_categories",
		Columns:    SubCategoriesColumns,
		PrimaryKey: []*schema.Column{SubCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sub_categories_categories_subs",
				Columns:    []*schema.Column{SubCategoriesColumns[5]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "user"}},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// ProductCartColumns holds the columns for the "product_cart" table.
	ProductCartColumns = []*schema.Column{
		{Name: "product_id", Type: field.TypeInt},
		{Name: "cart_id", Type: field.TypeInt},
	}
	// ProductCartTable holds the schema information for the "product_cart" table.
	ProductCartTable = &schema.Table{
		Name:       "product_cart",
		Columns:    ProductCartColumns,
		PrimaryKey: []*schema.Column{ProductCartColumns[0], ProductCartColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_cart_product_id",
				Columns:    []*schema.Column{ProductCartColumns[0]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_cart_cart_id",
				Columns:    []*schema.Column{ProductCartColumns[1]},
				RefColumns: []*schema.Column{CartsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SubCategoryProductColumns holds the columns for the "sub_category_product" table.
	SubCategoryProductColumns = []*schema.Column{
		{Name: "sub_category_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt},
	}
	// SubCategoryProductTable holds the schema information for the "sub_category_product" table.
	SubCategoryProductTable = &schema.Table{
		Name:       "sub_category_product",
		Columns:    SubCategoryProductColumns,
		PrimaryKey: []*schema.Column{SubCategoryProductColumns[0], SubCategoryProductColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sub_category_product_sub_category_id",
				Columns:    []*schema.Column{SubCategoryProductColumns[0]},
				RefColumns: []*schema.Column{SubCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "sub_category_product_product_id",
				Columns:    []*schema.Column{SubCategoryProductColumns[1]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserCartsColumns holds the columns for the "user_carts" table.
	UserCartsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "cart_id", Type: field.TypeInt},
	}
	// UserCartsTable holds the schema information for the "user_carts" table.
	UserCartsTable = &schema.Table{
		Name:       "user_carts",
		Columns:    UserCartsColumns,
		PrimaryKey: []*schema.Column{UserCartsColumns[0], UserCartsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_carts_user_id",
				Columns:    []*schema.Column{UserCartsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_carts_cart_id",
				Columns:    []*schema.Column{UserCartsColumns[1]},
				RefColumns: []*schema.Column{CartsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CartsTable,
		CategoriesTable,
		CustomersTable,
		OrdersTable,
		ProductsTable,
		SubCategoriesTable,
		UsersTable,
		ProductCartTable,
		SubCategoryProductTable,
		UserCartsTable,
	}
)

func init() {
	CustomersTable.ForeignKeys[0].RefTable = UsersTable
	SubCategoriesTable.ForeignKeys[0].RefTable = CategoriesTable
	ProductCartTable.ForeignKeys[0].RefTable = ProductsTable
	ProductCartTable.ForeignKeys[1].RefTable = CartsTable
	SubCategoryProductTable.ForeignKeys[0].RefTable = SubCategoriesTable
	SubCategoryProductTable.ForeignKeys[1].RefTable = ProductsTable
	UserCartsTable.ForeignKeys[0].RefTable = UsersTable
	UserCartsTable.ForeignKeys[1].RefTable = CartsTable
}
