// Code generated by ent, DO NOT EDIT.

package order

import (
	"fmt"
)

const (
	// Label holds the string label denoting the order type in the database.
	Label = "order"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOrderDate holds the string denoting the order_date field in the database.
	FieldOrderDate = "order_date"
	// FieldShippingAddress holds the string denoting the shipping_address field in the database.
	FieldShippingAddress = "shipping_address"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldPaymentMethod holds the string denoting the payment_method field in the database.
	FieldPaymentMethod = "payment_method"
	// FieldTotalPrice holds the string denoting the total_price field in the database.
	FieldTotalPrice = "total_price"
	// FieldTrackingNumber holds the string denoting the tracking_number field in the database.
	FieldTrackingNumber = "tracking_number"
	// FieldOrderStatus holds the string denoting the order_status field in the database.
	FieldOrderStatus = "order_status"
	// Table holds the table name of the order in the database.
	Table = "orders"
)

// Columns holds all SQL columns for order fields.
var Columns = []string{
	FieldID,
	FieldOrderDate,
	FieldShippingAddress,
	FieldPhone,
	FieldPaymentMethod,
	FieldTotalPrice,
	FieldTrackingNumber,
	FieldOrderStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// PaymentMethod defines the type for the "payment_method" enum field.
type PaymentMethod string

// PaymentMethod values.
const (
	PaymentMethodCash    PaymentMethod = "Cash"
	PaymentMethodBanking PaymentMethod = "Banking"
)

func (pm PaymentMethod) String() string {
	return string(pm)
}

// PaymentMethodValidator is a validator for the "payment_method" field enum values. It is called by the builders before save.
func PaymentMethodValidator(pm PaymentMethod) error {
	switch pm {
	case PaymentMethodCash, PaymentMethodBanking:
		return nil
	default:
		return fmt.Errorf("order: invalid enum value for payment_method field: %q", pm)
	}
}

// OrderStatus defines the type for the "order_status" enum field.
type OrderStatus string

// OrderStatus values.
const (
	OrderStatusPending   OrderStatus = "Pending"
	OrderStatusProcessed OrderStatus = "Processed"
	OrderStatusShipped   OrderStatus = "Shipped"
	OrderStatusCancelled OrderStatus = "Cancelled"
	OrderStatusPickedUp  OrderStatus = "PickedUp"
)

func (os OrderStatus) String() string {
	return string(os)
}

// OrderStatusValidator is a validator for the "order_status" field enum values. It is called by the builders before save.
func OrderStatusValidator(os OrderStatus) error {
	switch os {
	case OrderStatusPending, OrderStatusProcessed, OrderStatusShipped, OrderStatusCancelled, OrderStatusPickedUp:
		return nil
	default:
		return fmt.Errorf("order: invalid enum value for order_status field: %q", os)
	}
}
